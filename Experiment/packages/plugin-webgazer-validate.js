var jsPsychWebgazerValidate = function (t) { "use strict"; function e(t, e) { for (var n = 0; n < e.length; n++) { var a = e[n]; a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a) } } var n = { name: "webgazer-validate", parameters: { validation_points: { type: t.ParameterType.INT, default: [[10, 10], [10, 50], [10, 90], [50, 10], [50, 50], [50, 90], [90, 10], [90, 50], [90, 90]], array: !0 }, validation_point_coordinates: { type: t.ParameterType.SELECT, default: "percent", options: ["percent", "center-offset-pixels"] }, roi_radius: { type: t.ParameterType.INT, default: 200 }, randomize_validation_order: { type: t.ParameterType.BOOL, default: !1 }, time_to_saccade: { type: t.ParameterType.INT, default: 1e3 }, validation_duration: { type: t.ParameterType.INT, default: 2e3 }, point_size: { type: t.ParameterType.INT, default: 20 }, show_validation_data: { type: t.ParameterType.BOOL, default: !1 } } }, a = function () { function t(e) { !function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }(this, t), this.jsPsych = e } var n, a, o; return n = t, (a = [{ key: "trial", value: function (t, e) { var n = this, a = { raw_gaze: [], percent_in_roi: [], average_offset: [], validation_points: null }; t.innerHTML = "\n        <div id='webgazer-validate-container' style='position: relative; width:100vw; height:100vh; overflow: hidden;'>\n        </div>"; var o = t.querySelector("#webgazer-validate-container"), i = -1, r = null, c = performance.now(), s = function () { n.jsPsych.extensions.webgazer.stopSampleInterval(), n.jsPsych.pluginAPI.clearAllTimeouts(), t.innerHTML = "", n.jsPsych.finishTrial(a) }, d = function (t) { var i = u(t[0], t[1]); o.innerHTML = i; var r = o.querySelector(".validation-point").getBoundingClientRect(), s = r.left + r.width / 2, d = r.top + r.height / 2, p = performance.now() + e.time_to_saccade, f = p + e.validation_duration, v = [], h = n.jsPsych.extensions.webgazer.onGazeUpdate((function (t) { performance.now() > p && v.push({ x: t.x, y: t.y, dx: t.x - s, dy: t.y - d, t: Math.round(t.t - c) }) })); requestAnimationFrame((function t() { performance.now() < f ? requestAnimationFrame(t) : (a.raw_gaze.push(v), h(), l()) })) }, l = function () { if (++i == r.length) p(); else { var t = r[i]; d(t) } }, p = function () { a.samples_per_sec = function (t) { var e = []; if (0 == t.length) return 0; for (var n = 0; n < t.length; n++)if (t[n].length > 1) { for (var a = [], o = 1; o < t[n].length; o++)a.push(t[n][o].t - t[n][o - 1].t); e.push(a.reduce((function (t, e) { return t + e }), 0) / a.length) } return e.length > 0 ? 1e3 / (e.reduce((function (t, e) { return t + e }), 0) / e.length) : null }(a.raw_gaze).toFixed(2); for (var t = 0; t < e.validation_points.length; t++)a.percent_in_roi[t] = (i = a.raw_gaze[t], r = void 0, void 0, r = i.map((function (t) { return Math.sqrt(Math.pow(t.dx, 2) + Math.pow(t.dy, 2)) })), r.reduce((function (t, n) { return n <= e.roi_radius && t++, t }), 0) / i.length * 100), a.average_offset[t] = h(a.raw_gaze[t]); var i, r; e.show_validation_data ? function () { for (var t = "", i = 0; i < e.validation_points.length; i++) { t += u(e.validation_points[i][0], e.validation_points[i][1]), t += f(e.validation_points[i][0], e.validation_points[i][1], 0, 0, e.roi_radius); for (var r = 0; r < a.raw_gaze[i].length; r++)t += v(e.validation_points[i][0], e.validation_points[i][1], a.raw_gaze[i][r].dx, a.raw_gaze[i][r].dy) } t += '<button id="cont" style="position:absolute; top: 50%; left:calc(50% - 50px); width: 100px;" class="jspsych-btn">Continue</btn>', o.innerHTML = t, o.querySelector("#cont").addEventListener("click", (function () { n.jsPsych.extensions.webgazer.pause(), s() })), n.jsPsych.extensions.webgazer.showPredictions(), n.jsPsych.extensions.webgazer.stopSampleInterval(), n.jsPsych.extensions.webgazer.resume() }() : s() }; function u(t, n) { return "percent" == e.validation_point_coordinates ? function (t, n) { return '<div class="validation-point" style="width:'.concat(e.point_size, "px; height:").concat(e.point_size, "px; border-radius:").concat(e.point_size, "px; border: 1px solid #000; background-color: #13eb5e; position: absolute; left:").concat(t, "%; top:").concat(n, '%;"></div>') }(t, n) : "center-offset-pixels" == e.validation_point_coordinates ? function (t, n) { return '<div class="validation-point" style="width:'.concat(e.point_size, "px; height:").concat(e.point_size, "px; border-radius:").concat(e.point_size, "px; border: 1px solid #000; background-color: #13eb5e; position: absolute; left:calc(50% - ").concat(e.point_size / 2, "px + ").concat(t, "px); top:calc(50% - ").concat(e.point_size / 2, "px + ").concat(n, 'px);"></div>') }(t, n) : void 0 } function f(t, n, a, o, i) { return "percent" == e.validation_point_coordinates ? function (t, e, n, a, o) { return '\n          <div class="validation-centroid" style="width:'.concat(2 * o, "px; height:").concat(2 * o, "px; border: 2px dotted #ccc; border-radius: ").concat(o, "px; background-color: transparent; position: absolute; left:calc(").concat(t, "% + ").concat(n - o, "px); top:calc(").concat(e, "% + ").concat(a - o, 'px);"></div>\n        ') }(t, n, a, o, i) : "center-offset-pixels" == e.validation_point_coordinates ? function (t, e, n, a, o) { return '\n          <div class="validation-centroid" style="width:'.concat(2 * o, "px; height:").concat(2 * o, "px; border: 2px dotted #ccc; border-radius: ").concat(o, "px; background-color: transparent; position: absolute; left:calc(50% + ").concat(t, "px + ").concat(n - o, "px); top:calc(50% + ").concat(e, "px + ").concat(a - o, 'px);"></div>\n        ') }(t, n, a, o, i) : void 0 } function v(t, n, a, o) { return "percent" == e.validation_point_coordinates ? function (t, n, a, o) { var i = Math.sqrt(a * a + o * o) <= e.roi_radius ? "#afa" : "#faa"; return '<div class="raw-data-point" style="width:5px; height:5px; border-radius:5px; background-color: '.concat(i, "; opacity:0.8; position: absolute; left:calc(").concat(t, "% + ").concat(a - 2, "px); top:calc(").concat(n, "% + ").concat(o - 2, 'px);"></div>') }(t, n, a, o) : "center-offset-pixels" == e.validation_point_coordinates ? function (t, n, a, o) { var i = Math.sqrt(a * a + o * o) <= e.roi_radius ? "#afa" : "#faa"; return '<div class="raw-data-point" style="width:5px; height:5px; border-radius:5px; background-color: '.concat(i, "; opacity:0.8; position: absolute; left:calc(50% + ").concat(t, "px + ").concat(a - 2, "px); top:calc(50% + ").concat(n, "px + ").concat(o - 2, 'px);"></div>') }(t, n, a, o) : void 0 } function h(t) { var e, n, a, o = t.reduce((function (e, n, a) { return e += n.dx, a == t.length - 1 ? e / t.length : e }), 0), i = t.reduce((function (e, n, a) { return e += n.dy, a == t.length - 1 ? e / t.length : e }), 0), r = (e = t.map((function (t) { return Math.sqrt(Math.pow(t.dx - o, 2) + Math.pow(t.dy - i, 2)) })), n = Math.floor(e.length / 2), a = e.sort((function (t, e) { return t - e })), e.length % 2 == 0 ? a[n - 1] + a[n] / 2 : a[n]); return { x: o, y: i, r: r } } r = e.randomize_validation_order ? n.jsPsych.randomization.shuffle(e.validation_points) : e.validation_points, a.validation_points = r, i = -1, n.jsPsych.extensions.webgazer.startSampleInterval(), l() } }]) && e(n.prototype, a), o && e(n, o), Object.defineProperty(n, "prototype", { writable: !1 }), t }(); return a.info = n, a }(jsPsychModule);
//# sourceMappingURL=index.browser.min.js.map